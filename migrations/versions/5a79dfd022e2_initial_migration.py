"""Initial migration

Revision ID: 5a79dfd022e2
Revises: 
Create Date: 2021-11-30 16:10:40.237524

"""
from alembic import op
import sqlalchemy as sa

from migrations.utils import exists_table, not_exists_table


# revision identifiers, used by Alembic.
revision = "5a79dfd022e2"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if not_exists_table("drops"):
        op.create_table(
            "drops",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("title", sa.String(length=100), nullable=False),
            sa.Column("description", sa.Text(), nullable=True),
            sa.Column("image_url", sa.String(length=255), nullable=True),
            sa.Column(
                "status",
                sa.Enum("DRAFT", "PUBLISHED", "ON_SALE", "FINISHED", name="dropstatus"),
                nullable=False,
            ),
            sa.Column("start_time", sa.DateTime(), nullable=True),
            sa.Column("end_time", sa.DateTime(), nullable=True),
            sa.Column(
                "created_at",
                sa.DateTime(timezone=True),
                server_default=sa.text("now()"),
                nullable=False,
            ),
            sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
            sa.Column("publish_time", sa.DateTime(), nullable=True),
            sa.Column("dapper_drop_id", sa.Integer(), nullable=True),
            sa.Column("uuid", sa.String(length=100), nullable=False),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint("uuid"),
        )
    if not_exists_table("series"):
        op.create_table(
            "series",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(length=100), nullable=False),
            sa.Column("description", sa.Text(), nullable=True),
            sa.Column("short_word", sa.String(length=50), nullable=False),
            sa.Column(
                "status",
                sa.Enum("DRAFT", "ACTIVE", "INACTIVE", name="seriestatus"),
                nullable=False,
            ),
            sa.Column("publish_time", sa.DateTime(), nullable=True),
            sa.Column(
                "created_at",
                sa.DateTime(timezone=True),
                server_default=sa.text("now()"),
                nullable=False,
            ),
            sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
            sa.Column("dapper_series_id", sa.Integer(), nullable=True),
            sa.Column("collections_count", sa.Integer(), nullable=False),
            sa.Column("has_published_editions", sa.Boolean(), nullable=False),
            sa.Column("uuid", sa.String(length=100), nullable=False),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint("name"),
            sa.UniqueConstraint("short_word"),
            sa.UniqueConstraint("uuid"),
        )
    if not_exists_table("collections"):
        op.create_table(
            "collections",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(length=100), nullable=False),
            sa.Column("description", sa.Text(), nullable=True),
            sa.Column("short_word", sa.String(length=50), nullable=False),
            sa.Column(
                "status",
                sa.Enum("DRAFT", "PUBLISHED", "INACTIVE", name="collectionstatus"),
                nullable=False,
            ),
            sa.Column("publish_time", sa.DateTime(), nullable=True),
            sa.Column(
                "created_at",
                sa.DateTime(timezone=True),
                server_default=sa.text("now()"),
                nullable=False,
            ),
            sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
            sa.Column("dapper_collection_id", sa.Integer(), nullable=True),
            sa.Column("serie_id", sa.Integer(), nullable=False),
            sa.Column("wearables_count", sa.Integer(), nullable=False),
            sa.Column("has_published_editions", sa.Boolean(), nullable=False),
            sa.Column("uuid", sa.String(length=100), nullable=False),
            sa.ForeignKeyConstraint(
                ["serie_id"],
                ["series.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint("name"),
            sa.UniqueConstraint("short_word"),
            sa.UniqueConstraint("uuid"),
        )
    if not_exists_table("editions"):
        op.create_table(
            "editions",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(length=100), nullable=False),
            sa.Column("description", sa.Text(), nullable=True),
            sa.Column("artist", sa.String(length=100), nullable=True),
            sa.Column("avatar_wearable_sku", sa.String(length=100), nullable=False),
            sa.Column("celebrity", sa.String(length=100), nullable=True),
            sa.Column(
                "design_slot",
                sa.Enum(
                    "EDITION_DESIGN_SLOT_NIL",
                    "EDITION_DESIGN_SLOT_GLASSES",
                    "EDITION_DESIGN_SLOT_HELMET",
                    "EDITION_DESIGN_SLOT_MASK",
                    "EDITION_DESIGN_SLOT_SHIRT",
                    "EDITION_DESIGN_SLOT_JACKET",
                    "EDITION_DESIGN_SLOT_PANTS",
                    "EDITION_DESIGN_SLOT_SHOES",
                    name="designslot",
                ),
                nullable=True,
            ),
            sa.Column("publisher", sa.String(length=100), nullable=True),
            sa.Column(
                "rarity",
                sa.Enum(
                    "EDITION_RARITY_NIL",
                    "EDITION_RARITY_UNIQUE",
                    "EDITION_RARITY_LEGENDARY",
                    "EDITION_RARITY_EPIC",
                    "EDITION_RARITY_RARE",
                    "EDITION_RARITY_STANDARD",
                    "EDITION_RARITY_COMMON",
                    name="editionrarity",
                ),
                nullable=True,
            ),
            sa.Column("trademark", sa.String(length=100), nullable=True),
            sa.Column(
                "type",
                sa.Enum(
                    "EDITION_TYPE_AVATAR_NIL",
                    "EDITION_TYPE_AVATAR_STATUE",
                    "EDITION_TYPE_AVATAR_WEARABLE",
                    name="editiontype",
                ),
                nullable=True,
            ),
            sa.Column("price", sa.Numeric(precision=20, scale=2), nullable=True),
            sa.Column("reserve_percentage", sa.Integer(), nullable=True),
            sa.Column(
                "status",
                sa.Enum("DRAFT", "CREATED", "MINTED", "ON_SALE", name="editionstatus"),
                nullable=False,
            ),
            sa.Column("publish_time", sa.DateTime(), nullable=True),
            sa.Column(
                "created_at",
                sa.DateTime(timezone=True),
                server_default=sa.text("now()"),
                nullable=False,
            ),
            sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
            sa.Column("avatar_wearable_id", sa.Integer(), nullable=False),
            sa.Column("dapper_edition_id", sa.Integer(), nullable=True),
            sa.Column("collection_id", sa.Integer(), nullable=False),
            sa.Column("uuid", sa.String(length=100), nullable=False),
            sa.ForeignKeyConstraint(
                ["collection_id"],
                ["collections.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint("name"),
            sa.UniqueConstraint("uuid"),
        )
    if not_exists_table("drop_editions"):
        op.create_table(
            "drop_editions",
            sa.Column("drop_id", sa.Integer(), nullable=False),
            sa.Column("edition_id", sa.Integer(), nullable=False),
            sa.Column("price", sa.Float(), nullable=False),
            sa.Column("uuid", sa.String(length=100), nullable=False),
            sa.ForeignKeyConstraint(
                ["drop_id"],
                ["drops.id"],
            ),
            sa.ForeignKeyConstraint(
                ["edition_id"],
                ["editions.id"],
            ),
            sa.PrimaryKeyConstraint("drop_id", "edition_id"),
            sa.UniqueConstraint("uuid"),
        )
    if not_exists_table("nfts"):
        op.create_table(
            "nfts",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("reserved", sa.Boolean(), nullable=False),
            sa.Column(
                "status", sa.Enum("MINTED", "GIFTED", name="nftstatus"), nullable=False
            ),
            sa.Column("dapper_nft_id", sa.Integer(), nullable=True),
            sa.Column("edition_id", sa.Integer(), nullable=False),
            sa.Column("uuid", sa.String(length=100), nullable=False),
            sa.ForeignKeyConstraint(
                ["edition_id"],
                ["editions.id"],
            ),
            sa.PrimaryKeyConstraint("id"),
            sa.UniqueConstraint("uuid"),
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if exists_table("nfts"):
        op.drop_table("nfts")
    if exists_table("drop_editions"):
        op.drop_table("drop_editions")
    if exists_table("editions"):
        op.drop_table("editions")
    if exists_table("collections"):
        op.drop_table("collections")
    if exists_table("series"):
        op.drop_table("series")
    if exists_table("drops"):
        op.drop_table("drops")
    # ### end Alembic commands ###
