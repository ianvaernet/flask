# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.base_serie import BaseSerie  # noqa: F401,E501
from swagger_server.models.serie_status import SerieStatus  # noqa: F401,E501
from swagger_server import util


class SerieListable(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        name: str = None,
        description: str = None,
        short_word: str = None,
        publish_time: datetime = None,
        id: int = None,
        status: SerieStatus = None,
        collections_count: int = None,
    ):  # noqa: E501
        """SerieListable - a model defined in Swagger

        :param name: The name of this SerieListable.  # noqa: E501
        :type name: str
        :param description: The description of this SerieListable.  # noqa: E501
        :type description: str
        :param short_word: The short_word of this SerieListable.  # noqa: E501
        :type short_word: str
        :param publish_time: The publish_time of this SerieListable.  # noqa: E501
        :type publish_time: datetime
        :param id: The id of this SerieListable.  # noqa: E501
        :type id: int
        :param status: The status of this SerieListable.  # noqa: E501
        :type status: SerieStatus
        :param collections_count: The collections_count of this SerieListable.  # noqa: E501
        :type collections_count: int
        """
        self.swagger_types = {
            "name": str,
            "description": str,
            "short_word": str,
            "publish_time": datetime,
            "id": int,
            "status": SerieStatus,
            "collections_count": int,
        }

        self.attribute_map = {
            "name": "name",
            "description": "description",
            "short_word": "short_word",
            "publish_time": "publish_time",
            "id": "id",
            "status": "status",
            "collections_count": "collections_count",
        }
        self._name = name
        self._description = description
        self._short_word = short_word
        self._publish_time = publish_time
        self._id = id
        self._status = status
        self._collections_count = collections_count

    @classmethod
    def from_dict(cls, dikt) -> "SerieListable":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SerieListable of this SerieListable.  # noqa: E501
        :rtype: SerieListable
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this SerieListable.


        :return: The name of this SerieListable.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this SerieListable.


        :param name: The name of this SerieListable.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this SerieListable.


        :return: The description of this SerieListable.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this SerieListable.


        :param description: The description of this SerieListable.
        :type description: str
        """

        self._description = description

    @property
    def short_word(self) -> str:
        """Gets the short_word of this SerieListable.


        :return: The short_word of this SerieListable.
        :rtype: str
        """
        return self._short_word

    @short_word.setter
    def short_word(self, short_word: str):
        """Sets the short_word of this SerieListable.


        :param short_word: The short_word of this SerieListable.
        :type short_word: str
        """

        self._short_word = short_word

    @property
    def publish_time(self) -> datetime:
        """Gets the publish_time of this SerieListable.


        :return: The publish_time of this SerieListable.
        :rtype: datetime
        """
        return self._publish_time

    @publish_time.setter
    def publish_time(self, publish_time: datetime):
        """Sets the publish_time of this SerieListable.


        :param publish_time: The publish_time of this SerieListable.
        :type publish_time: datetime
        """

        self._publish_time = publish_time

    @property
    def id(self) -> int:
        """Gets the id of this SerieListable.


        :return: The id of this SerieListable.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this SerieListable.


        :param id: The id of this SerieListable.
        :type id: int
        """

        self._id = id

    @property
    def status(self) -> SerieStatus:
        """Gets the status of this SerieListable.


        :return: The status of this SerieListable.
        :rtype: SerieStatus
        """
        return self._status

    @status.setter
    def status(self, status: SerieStatus):
        """Sets the status of this SerieListable.


        :param status: The status of this SerieListable.
        :type status: SerieStatus
        """

        self._status = status

    @property
    def collections_count(self) -> int:
        """Gets the collections_count of this SerieListable.

        The amount of collections in the Serie (cannot be deleted if this is > 0)  # noqa: E501

        :return: The collections_count of this SerieListable.
        :rtype: int
        """
        return self._collections_count

    @collections_count.setter
    def collections_count(self, collections_count: int):
        """Sets the collections_count of this SerieListable.

        The amount of collections in the Serie (cannot be deleted if this is > 0)  # noqa: E501

        :param collections_count: The collections_count of this SerieListable.
        :type collections_count: int
        """

        self._collections_count = collections_count
