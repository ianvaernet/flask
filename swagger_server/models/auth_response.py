# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AuthResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, username: str = None, token: str = None, api_token: str = None
    ):  # noqa: E501
        """AuthResponse - a model defined in Swagger

        :param username: The username of this AuthResponse.  # noqa: E501
        :type username: str
        :param token: The token of this AuthResponse.  # noqa: E501
        :type token: str
        :param api_token: The api_token of this AuthResponse.  # noqa: E501
        :type api_token: str
        """
        self.swagger_types = {"username": str, "token": str, "api_token": str}

        self.attribute_map = {
            "username": "username",
            "token": "token",
            "api_token": "api_token",
        }
        self._username = username
        self._token = token
        self._api_token = api_token

    @classmethod
    def from_dict(cls, dikt) -> "AuthResponse":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AuthResponse of this AuthResponse.  # noqa: E501
        :rtype: AuthResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def username(self) -> str:
        """Gets the username of this AuthResponse.


        :return: The username of this AuthResponse.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this AuthResponse.


        :param username: The username of this AuthResponse.
        :type username: str
        """

        self._username = username

    @property
    def token(self) -> str:
        """Gets the token of this AuthResponse.


        :return: The token of this AuthResponse.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token: str):
        """Sets the token of this AuthResponse.


        :param token: The token of this AuthResponse.
        :type token: str
        """

        self._token = token

    @property
    def api_token(self) -> str:
        """Gets the api_token of this AuthResponse.


        :return: The api_token of this AuthResponse.
        :rtype: str
        """
        return self._api_token

    @api_token.setter
    def api_token(self, api_token: str):
        """Sets the api_token of this AuthResponse.


        :param api_token: The api_token of this AuthResponse.
        :type api_token: str
        """

        self._api_token = api_token
