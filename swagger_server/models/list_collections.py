# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.collection_listable import (
    CollectionListable,
)  # noqa: F401,E501
from swagger_server import util


class ListCollections(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, collections: List[CollectionListable] = None, total_pages: int = None
    ):  # noqa: E501
        """ListCollections - a model defined in Swagger

        :param collections: The collections of this ListCollections.  # noqa: E501
        :type collections: List[CollectionListable]
        :param total_pages: The total_pages of this ListCollections.  # noqa: E501
        :type total_pages: int
        """
        self.swagger_types = {
            "collections": List[CollectionListable],
            "total_pages": int,
        }

        self.attribute_map = {
            "collections": "collections",
            "total_pages": "total_pages",
        }
        self._collections = collections
        self._total_pages = total_pages

    @classmethod
    def from_dict(cls, dikt) -> "ListCollections":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListCollections of this ListCollections.  # noqa: E501
        :rtype: ListCollections
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collections(self) -> List[CollectionListable]:
        """Gets the collections of this ListCollections.


        :return: The collections of this ListCollections.
        :rtype: List[CollectionListable]
        """
        return self._collections

    @collections.setter
    def collections(self, collections: List[CollectionListable]):
        """Sets the collections of this ListCollections.


        :param collections: The collections of this ListCollections.
        :type collections: List[CollectionListable]
        """

        self._collections = collections

    @property
    def total_pages(self) -> int:
        """Gets the total_pages of this ListCollections.


        :return: The total_pages of this ListCollections.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages: int):
        """Sets the total_pages of this ListCollections.


        :param total_pages: The total_pages of this ListCollections.
        :type total_pages: int
        """

        self._total_pages = total_pages
