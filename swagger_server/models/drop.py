# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.base_drop import BaseDrop  # noqa: F401,E501
from swagger_server.models.drop_edition import DropEdition  # noqa: F401,E501
from swagger_server.models.drop_status import DropStatus  # noqa: F401,E501
from swagger_server import util


class Drop(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        title: str = None,
        description: str = None,
        image_url: str = None,
        start_time: datetime = None,
        end_time: datetime = None,
        publish_time: datetime = None,
        id: int = None,
        status: DropStatus = None,
        drop_editions: List[DropEdition] = None,
        editions_quantity: int = None,
    ):  # noqa: E501
        """Drop - a model defined in Swagger

        :param title: The title of this Drop.  # noqa: E501
        :type title: str
        :param description: The description of this Drop.  # noqa: E501
        :type description: str
        :param image_url: The image_url of this Drop.  # noqa: E501
        :type image_url: str
        :param start_time: The start_time of this Drop.  # noqa: E501
        :type start_time: datetime
        :param end_time: The end_time of this Drop.  # noqa: E501
        :type end_time: datetime
        :param publish_time: The publish_time of this Drop.  # noqa: E501
        :type publish_time: datetime
        :param id: The id of this Drop.  # noqa: E501
        :type id: int
        :param status: The status of this Drop.  # noqa: E501
        :type status: DropStatus
        :param drop_editions: The drop_editions of this Drop.  # noqa: E501
        :type drop_editions: List[DropEdition]
        :param editions_quantity: The editions_quantity of this Drop.  # noqa: E501
        :type editions_quantity: int
        """
        self.swagger_types = {
            "title": str,
            "description": str,
            "image_url": str,
            "start_time": datetime,
            "end_time": datetime,
            "publish_time": datetime,
            "id": int,
            "status": DropStatus,
            "drop_editions": List[DropEdition],
            "editions_quantity": int,
        }

        self.attribute_map = {
            "title": "title",
            "description": "description",
            "image_url": "image_url",
            "start_time": "start_time",
            "end_time": "end_time",
            "publish_time": "publish_time",
            "id": "id",
            "status": "status",
            "drop_editions": "drop_editions",
            "editions_quantity": "editions_quantity",
        }
        self._title = title
        self._description = description
        self._image_url = image_url
        self._start_time = start_time
        self._end_time = end_time
        self._publish_time = publish_time
        self._id = id
        self._status = status
        self._drop_editions = drop_editions
        self._editions_quantity = editions_quantity

    @classmethod
    def from_dict(cls, dikt) -> "Drop":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Drop of this Drop.  # noqa: E501
        :rtype: Drop
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this Drop.


        :return: The title of this Drop.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Drop.


        :param title: The title of this Drop.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this Drop.


        :return: The description of this Drop.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Drop.


        :param description: The description of this Drop.
        :type description: str
        """

        self._description = description

    @property
    def image_url(self) -> str:
        """Gets the image_url of this Drop.


        :return: The image_url of this Drop.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url: str):
        """Sets the image_url of this Drop.


        :param image_url: The image_url of this Drop.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def start_time(self) -> datetime:
        """Gets the start_time of this Drop.


        :return: The start_time of this Drop.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time: datetime):
        """Sets the start_time of this Drop.


        :param start_time: The start_time of this Drop.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self) -> datetime:
        """Gets the end_time of this Drop.


        :return: The end_time of this Drop.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time: datetime):
        """Sets the end_time of this Drop.


        :param end_time: The end_time of this Drop.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def publish_time(self) -> datetime:
        """Gets the publish_time of this Drop.


        :return: The publish_time of this Drop.
        :rtype: datetime
        """
        return self._publish_time

    @publish_time.setter
    def publish_time(self, publish_time: datetime):
        """Sets the publish_time of this Drop.


        :param publish_time: The publish_time of this Drop.
        :type publish_time: datetime
        """

        self._publish_time = publish_time

    @property
    def id(self) -> int:
        """Gets the id of this Drop.


        :return: The id of this Drop.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Drop.


        :param id: The id of this Drop.
        :type id: int
        """

        self._id = id

    @property
    def status(self) -> DropStatus:
        """Gets the status of this Drop.


        :return: The status of this Drop.
        :rtype: DropStatus
        """
        return self._status

    @status.setter
    def status(self, status: DropStatus):
        """Sets the status of this Drop.


        :param status: The status of this Drop.
        :type status: DropStatus
        """

        self._status = status

    @property
    def drop_editions(self) -> List[DropEdition]:
        """Gets the drop_editions of this Drop.


        :return: The drop_editions of this Drop.
        :rtype: List[DropEdition]
        """
        return self._drop_editions

    @drop_editions.setter
    def drop_editions(self, drop_editions: List[DropEdition]):
        """Sets the drop_editions of this Drop.


        :param drop_editions: The drop_editions of this Drop.
        :type drop_editions: List[DropEdition]
        """

        self._drop_editions = drop_editions

    @property
    def editions_quantity(self) -> int:
        """Gets the editions_quantity of this Drop.


        :return: The editions_quantity of this Drop.
        :rtype: int
        """
        return self._editions_quantity

    @editions_quantity.setter
    def editions_quantity(self, editions_quantity: int):
        """Sets the editions_quantity of this Drop.


        :param editions_quantity: The editions_quantity of this Drop.
        :type editions_quantity: int
        """

        self._editions_quantity = editions_quantity
