# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.drop_listable import DropListable  # noqa: F401,E501
from swagger_server.models.edition_listable import EditionListable  # noqa: F401,E501
from swagger_server.models.one_of_drop_edition_price import (
    OneOfDropEditionPrice,
)  # noqa: F401,E501
from swagger_server import util


class DropEdition(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        drop: DropListable = None,
        edition: EditionListable = None,
        price: OneOfDropEditionPrice = None,
    ):  # noqa: E501
        """DropEdition - a model defined in Swagger

        :param drop: The drop of this DropEdition.  # noqa: E501
        :type drop: DropListable
        :param edition: The edition of this DropEdition.  # noqa: E501
        :type edition: EditionListable
        :param price: The price of this DropEdition.  # noqa: E501
        :type price: OneOfDropEditionPrice
        """
        self.swagger_types = {
            "drop": DropListable,
            "edition": EditionListable,
            "price": OneOfDropEditionPrice,
        }

        self.attribute_map = {"drop": "drop", "edition": "edition", "price": "price"}
        self._drop = drop
        self._edition = edition
        self._price = price

    @classmethod
    def from_dict(cls, dikt) -> "DropEdition":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DropEdition of this DropEdition.  # noqa: E501
        :rtype: DropEdition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drop(self) -> DropListable:
        """Gets the drop of this DropEdition.


        :return: The drop of this DropEdition.
        :rtype: DropListable
        """
        return self._drop

    @drop.setter
    def drop(self, drop: DropListable):
        """Sets the drop of this DropEdition.


        :param drop: The drop of this DropEdition.
        :type drop: DropListable
        """

        self._drop = drop

    @property
    def edition(self) -> EditionListable:
        """Gets the edition of this DropEdition.


        :return: The edition of this DropEdition.
        :rtype: EditionListable
        """
        return self._edition

    @edition.setter
    def edition(self, edition: EditionListable):
        """Sets the edition of this DropEdition.


        :param edition: The edition of this DropEdition.
        :type edition: EditionListable
        """

        self._edition = edition

    @property
    def price(self) -> OneOfDropEditionPrice:
        """Gets the price of this DropEdition.


        :return: The price of this DropEdition.
        :rtype: OneOfDropEditionPrice
        """
        return self._price

    @price.setter
    def price(self, price: OneOfDropEditionPrice):
        """Sets the price of this DropEdition.


        :param price: The price of this DropEdition.
        :type price: OneOfDropEditionPrice
        """

        self._price = price
