# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.edition_listable import EditionListable  # noqa: F401,E501
from swagger_server import util


class ListEditions(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, editions: List[EditionListable] = None, total_pages: int = None
    ):  # noqa: E501
        """ListEditions - a model defined in Swagger

        :param editions: The editions of this ListEditions.  # noqa: E501
        :type editions: List[EditionListable]
        :param total_pages: The total_pages of this ListEditions.  # noqa: E501
        :type total_pages: int
        """
        self.swagger_types = {"editions": List[EditionListable], "total_pages": int}

        self.attribute_map = {"editions": "editions", "total_pages": "total_pages"}
        self._editions = editions
        self._total_pages = total_pages

    @classmethod
    def from_dict(cls, dikt) -> "ListEditions":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListEditions of this ListEditions.  # noqa: E501
        :rtype: ListEditions
        """
        return util.deserialize_model(dikt, cls)

    @property
    def editions(self) -> List[EditionListable]:
        """Gets the editions of this ListEditions.


        :return: The editions of this ListEditions.
        :rtype: List[EditionListable]
        """
        return self._editions

    @editions.setter
    def editions(self, editions: List[EditionListable]):
        """Sets the editions of this ListEditions.


        :param editions: The editions of this ListEditions.
        :type editions: List[EditionListable]
        """

        self._editions = editions

    @property
    def total_pages(self) -> int:
        """Gets the total_pages of this ListEditions.


        :return: The total_pages of this ListEditions.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages: int):
        """Sets the total_pages of this ListEditions.


        :param total_pages: The total_pages of this ListEditions.
        :type total_pages: int
        """

        self._total_pages = total_pages
